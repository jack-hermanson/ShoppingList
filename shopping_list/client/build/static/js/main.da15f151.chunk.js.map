{"version":3,"sources":["components/AlertPanel/AlertPanel.tsx","components/Heading/Heading.tsx","api/groups.ts","components/ShoppingList/Item/ItemLabel.tsx","components/ShoppingList/Item/EditItemModal.tsx","components/ShoppingList/Item/Item.tsx","components/ShoppingList/Group.tsx","components/ShoppingList/ShoppingList.tsx","App.tsx","index.tsx"],"names":["AlertPanel","props","state","visible","Alert","color","this","text","Component","Heading","className","title","children","getGroup","groupId","a","axios","get","response","id","data","name","notes","getGroupIds","ItemLabel","htmlFor","item","recurring","style","paddingBottom","EditItemModal","Modal","toggle","closeEditModal","isOpen","showEditModal","ModalHeader","ModalBody","Item","Input","type","onClick","setState","Group","items","group","getGroupItems","groupItems","Card","CardHeader","Button","size","Table","striped","map","ShoppingList","actionsDropdownOpen","groupIds","ButtonDropdown","toggleActionsMenu","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Row","Col","sm","lg","CardBody","App","alerts","getAlerts","Container","alert","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.da15f151.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {Alert} from \"reactstrap\";\n\nexport interface AlertPanelProps {\n    color: string;\n    text: string;\n}\n\ninterface State {\n    visible: boolean;\n}\n\n\nexport default class AlertPanel extends Component<AlertPanelProps, State> {\n    constructor(props: AlertPanelProps) {\n        super(props);\n\n        this.state = {\n            visible: true\n        };\n    }\n\n    render() {\n        return (\n            <Alert color={this.props.color}>\n                {this.props.text}\n            </Alert>\n        );\n    }\n}","import React, {Component} from \"react\";\n\ninterface HeadingProps {\n    title: string;\n}\n\nexport default class Heading extends Component<HeadingProps, any> {\n    render() {\n        return (\n            <div>\n                <div className=\"page-title\">\n                    <h4 className=\"title-text\">{this.props.title}</h4>\n                    <div className=\"right\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import axios from \"axios\";\nimport GroupModel from \"../models/GroupModel\";\n\n\nexport const getGroup = async (groupId: number): Promise<GroupModel> => {\n    const response = await axios.get(`/api/groups/${groupId}`);\n    return {\n        id: response.data.id,\n        name: response.data.name,\n        notes: response.data.notes\n    };\n};\n\nexport const getGroups = async (): Promise<Array<GroupModel>> => {\n    const response = await axios.get(\"/api/groups/\");\n    return response.data;\n};\n\nexport const getGroupIds = async(): Promise<Array<number>> => {\n    const response = await axios.get(\"/api/groups/ids\");\n    return response.data;\n};","import React, {Component} from \"react\";\nimport {FiRepeat} from \"react-icons/fi\";\nimport ItemModel from \"../../../models/ItemModel\";\n\ninterface Props {\n    item: ItemModel;\n}\n\nexport default class ItemLabel extends Component<Props, any> {\n    render() {\n        return (\n            <label htmlFor={`checkbox_${this.props.item.id}`} className=\"custom-control-label\">\n                {this.props.item.name}\n                {this.props.item.recurring\n                    ? <FiRepeat className=\"ml-1\" style={{paddingBottom: \"3px\"}}/>\n                    : \"\"\n                }\n                {this.props.item.notes === \"\"\n                    ? \"\"\n                    : <small className=\"text-muted d-block\">{this.props.item.notes}</small>\n                }\n            </label>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport ItemModel from \"../../../models/ItemModel\";\nimport {Modal, ModalHeader, ModalBody, ModalFooter} from \"reactstrap\";\n\ninterface Props {\n    showEditModal: boolean;\n    closeEditModal: () => void;\n    item: ItemModel;\n}\n\nexport default class EditItemModal extends Component<Props, any> {\n    render() {\n        return (\n            <Modal toggle={this.props.closeEditModal} isOpen={this.props.showEditModal}>\n                <ModalHeader>{this.props.item.name}</ModalHeader>\n                <ModalBody>Body</ModalBody>\n            </Modal>\n        );\n    }\n}\n","import React, {Component, Fragment} from \"react\";\nimport ItemModel from \"../../../models/ItemModel\";\nimport {Input} from \"reactstrap\";\nimport {FaInfoCircle} from \"react-icons/fa\";\nimport ItemLabel from \"./ItemLabel\";\nimport EditItemModal from \"./EditItemModal\";\n\ninterface Props {\n    item: ItemModel;\n}\n\ninterface State {\n    showEditModal: boolean;\n}\n\nexport default class Item extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showEditModal: false\n        };\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <tr>\n                    <td>\n                        <div className=\"custom-control custom-checkbox\">\n                            <Input id={`checkbox_${this.props.item.id}`} type=\"checkbox\"\n                                   className=\"custom-control-input\"/>\n                            <ItemLabel item={this.props.item}/>\n                        </div>\n                    </td>\n                    <td>\n                        <FaInfoCircle onClick={() => this.setState({showEditModal: true})} />\n                    </td>\n                </tr>\n\n                <EditItemModal\n                    showEditModal={this.state.showEditModal}\n                    closeEditModal={() => this.setState({showEditModal: false})}\n                    item={this.props.item}\n                />\n            </Fragment>\n        );\n    }\n\n}","import React, {Component} from \"react\";\nimport GroupModel from \"../../models/GroupModel\";\nimport {Card, Button, CardHeader, Table} from \"reactstrap\";\nimport {getGroup} from \"../../api/groups\";\nimport ItemModel from \"../../models/ItemModel\";\nimport axios from \"axios\";\nimport Item from \"./Item/Item\";\nimport {FaRedo} from \"react-icons/fa\";\n\nexport interface GroupProps {\n    groupId: number;\n}\n\ninterface State extends GroupModel {\n    items: Array<ItemModel>;\n}\n\nexport default class Group extends Component<GroupProps, State> {\n    constructor(props: GroupProps) {\n        super(props);\n        this.state = {\n            id: null,\n            name: null,\n            notes: null,\n            items: []\n        };\n    }\n\n    async componentDidMount() {\n        const group: GroupModel = await getGroup(this.props.groupId);\n        this.setState({\n            id: group.id,\n            name: group.name,\n            notes: group.notes\n        });\n        const groupItems: Array<ItemModel> = await this.getGroupItems();\n        this.setState({\n            items: groupItems\n        });\n    }\n\n    render() {\n        return (\n            <Card className=\"space-between\">\n                <CardHeader className=\"d-flex\">\n                    <div className=\"d-block mt-auto\">\n                        {this.state.name}\n                        {this.state.notes === \"\"\n                            ? \"\"\n                            : <small className=\"d-block text-muted\">{this.state.notes}</small>}\n                    </div>\n                    <div className=\"my-auto ml-auto\">\n                        <Button size=\"sm\" color=\"primary\">Complete</Button>\n                    </div>\n                </CardHeader>\n                <Table className=\"mb-0 same-width\" striped>\n                    <tbody>\n                    {this.state.items.map(item => (\n                        <Item key={item.id} item={item}/>\n                    ))}\n                    </tbody>\n                </Table>\n            </Card>\n        )\n    }\n\n    async getGroupItems(): Promise<Array<ItemModel>> {\n        const response = await axios.get(`/api/items/?group-id=${this.state.id}`);\n        return response.data;\n    }\n\n\n}\n","import React, {Component} from \"react\";\nimport Heading from \"../Heading/Heading\";\nimport {\n    Card,\n    Row,\n    Col,\n    CardBody,\n    CardHeader,\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from \"reactstrap\";\nimport Group from \"./Group\";\nimport {getGroupIds} from \"../../api/groups\";\n\n\ninterface State {\n    actionsDropdownOpen: boolean;\n    groupIds: Array<number>;\n}\n\n\nexport default class ShoppingList extends Component<any, State> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            actionsDropdownOpen: false,\n            groupIds: []\n        };\n    }\n\n    async componentDidMount() {\n        const groupIds = await getGroupIds();\n        this.setState({groupIds: groupIds});\n    }\n\n    render() {\n        return (\n            <div>\n                <Heading title=\"Shopping List\">\n                    <ButtonDropdown isOpen={this.state.actionsDropdownOpen} toggle={() => this.toggleActionsMenu()}\n                                    size=\"sm\" color=\"info\">\n                        <DropdownToggle caret>\n                            Actions\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem>Test</DropdownItem>\n                            <DropdownItem>Test</DropdownItem>\n                        </DropdownMenu>\n                    </ButtonDropdown>\n                </Heading>\n                <Row>\n                    <Col sm={12} lg={8}>\n                        {this.state.groupIds.map(groupId => (\n                            <Group key={groupId} groupId={groupId} />\n                        ))}\n                    </Col>\n                    <Col>\n                        <Card className=\"space-between mt-3 mt-lg-0\">\n                            <CardHeader>New Item</CardHeader>\n                            <CardBody>Form</CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    toggleActionsMenu() {\n        this.setState({\n            actionsDropdownOpen: !this.state.actionsDropdownOpen\n        });\n    }\n}","import axios from \"axios\";\nimport {Container, Row, Col} from \"reactstrap\";\nimport AlertPanel, {AlertPanelProps} from \"./components/AlertPanel/AlertPanel\";\nimport ShoppingList from \"./components/ShoppingList/ShoppingList\";\nimport React, {Component, Fragment} from \"react\";\n\ninterface State {\n    alerts: Array<AlertPanelProps> | null;\n}\n\nclass App extends Component<any, State> {\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            alerts: null\n        };\n    }\n\n    async componentDidMount() {\n        await this.getAlerts();\n    }\n\n    render() {\n        return (\n            <Container className={\"main-container pt-0\"}>\n                <Row>\n                    <Col>\n                        {this.state.alerts?.map(alert => (\n                            <AlertPanel color={alert.color} text={alert.text} key={alert.text}/>\n                        ))}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <ShoppingList/>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    async getAlerts() {\n        const response = await axios.get(\"/api/alerts/\");\n        this.setState({alerts: response.data});\n    }\n\n    // constructor(props: any) {\n    //     super(props);\n    //     this.state = {\n    //         response: null\n    //     };\n    // }\n\n    // componentDidMount() {\n    //     axios.get('/api/items/').then(response => {\n    //         console.log('success');\n    //         console.log(response);\n    //         this.setState({response: response});\n    //     }).catch(error => {\n    //         console.log(error);\n    //     })\n    // }\n    //\n    // render() {\n    //     return (\n    //         <div className=\"App\">\n    //             <p>Test</p>\n    //             <p>{this.state.response?.data?.test || \"LOADING\"}</p>\n    //         </div>\n    //     );\n    // }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./main.css\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}