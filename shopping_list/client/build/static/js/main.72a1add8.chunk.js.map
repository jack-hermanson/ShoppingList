{"version":3,"sources":["components/Heading/Heading.tsx","store.ts","components/ShoppingList/Group/GroupHeader.tsx","components/ShoppingList/Item/ItemLabel.tsx","components/ShoppingList/Item/Item.tsx","components/LoadingSpinner/LoadingSpinner.tsx","components/ShoppingList/Group/GroupBody.tsx","components/ShoppingList/Group/Group.tsx","components/ShoppingList/Group/Groups.tsx","components/ShoppingList/ShoppingList.tsx","App.tsx","index.tsx"],"names":["Heading","className","this","props","title","children","Component","store","createStore","groups","setGroups","action","state","payload","fetchGroups","thunk","actions","a","axios","get","res","data","addGroup","push","saveGroup","post","items","setItems","fetchItems","alerts","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","GroupHeader","CardHeader","name","notes","Button","size","color","ItemLabel","item","htmlFor","id","recurring","style","paddingBottom","Item","Input","type","checked","onChange","console","log","cursor","onClick","LoadingSpinner","height","GroupBody","group","filter","some","_group","groupId","undefined","Table","striped","map","Group","Card","Groups","useEffect","ShoppingList","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Row","Col","sm","lg","CardBody","App","Container","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.72a1add8.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\ninterface HeadingProps {\n    title: string;\n}\n\nexport default class Heading extends Component<HeadingProps, any> {\n    render() {\n        return (\n            <div>\n                <div className=\"page-title\">\n                    <h4 className=\"title-text\">{this.props.title}</h4>\n                    <div className=\"right\">\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import GroupModel from \"./models/GroupModel\";\nimport {action, Action, computed, Computed, createStore, thunk, Thunk} from \"easy-peasy\";\nimport axios from \"axios\";\nimport {createTypedHooks} from \"easy-peasy\";\nimport AlertModel from \"./models/AlertModel\";\nimport ItemModel from \"./models/ItemModel\";\n\ninterface StoreModel {\n    groups: GroupModel[];\n    setGroups: Action<StoreModel, GroupModel[]>;\n    fetchGroups: Thunk<StoreModel>;\n    addGroup: Action<StoreModel, GroupModel>;\n    saveGroup: Thunk<StoreModel, GroupModel>;\n\n    items: ItemModel[] | null;\n    setItems: Action<StoreModel, ItemModel[]>;\n    fetchItems: Thunk<StoreModel>;\n\n    alerts: AlertModel[];\n}\n\nexport const store = createStore<StoreModel>({\n    groups: [],\n    setGroups: action((state, payload) => {\n        state.groups = payload;\n    }),\n    fetchGroups: thunk(async (actions) => {\n        const res = await axios.get(\"/api/groups/\");\n        actions.setGroups(res.data);\n    }),\n    addGroup: action((state, payload) => {\n        state.groups.push(payload);\n    }),\n    saveGroup: thunk(async (actions, payload) => {\n        const res = await axios.post(\"/api/groups/\", payload);\n        actions.addGroup(res.data);\n    }),\n\n    items: null,\n    setItems: action((state, payload) => {\n        state.items = payload;\n    }),\n    fetchItems: thunk(async (actions) => {\n        const res = await axios.get(\"/api/items/\");\n        actions.setItems(res.data);\n    }),\n\n    alerts: [],\n});\n\nconst typedHooks = createTypedHooks<StoreModel>();\n\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n","import React, {Component} from \"react\";\nimport {Button, CardHeader} from \"reactstrap\";\n\ninterface Props {\n    name: string;\n    notes: string;\n}\n\nexport default class GroupHeader extends Component<Props, any> {\n    render() {\n        return (\n            <CardHeader className=\"d-flex\">\n                <div className=\"d-block mt-auto\">\n                    {this.props.name}\n                    {this.props.notes === \"\"\n                        ? \"\"\n                        : <small className=\"d-block text-muted\">{this.props.notes}</small>}\n                </div>\n                <div className=\"my-auto ml-auto\">\n                    <Button size=\"sm\" color=\"info\">Complete</Button>\n                </div>\n            </CardHeader>\n        );\n    }\n}\n","import React from \"react\";\nimport {FiRepeat} from \"react-icons/fi\";\nimport ItemModel from \"../../../models/ItemModel\";\n\ninterface Props {\n    item: ItemModel;\n}\n\nexport const ItemLabel = ({item}: Props) => (\n    <label htmlFor={`checkbox_${item.id}`} className=\"custom-control-label\">\n        {item.name}\n        {item.recurring\n            ? <FiRepeat className=\"ml-1\" style={{paddingBottom: \"3px\"}}/>\n            : \"\"\n        }\n        {item.notes === \"\"\n            ? \"\"\n            : <small className=\"text-muted d-block\">{item.notes}</small>\n        }\n    </label>\n);","import React, {Fragment} from \"react\";\nimport ItemModel from \"../../../models/ItemModel\";\nimport {Input} from \"reactstrap\";\nimport {ItemLabel} from \"./ItemLabel\";\nimport {FaInfoCircle} from \"react-icons/fa\";\n\ninterface Props {\n    item: ItemModel;\n}\n\nexport const Item = ({item}: Props) => (\n    <Fragment>\n        <tr>\n            <td>\n                <div className=\"custom-control custom-checkbox\">\n                    <Input\n                        id={`checkbox_${item.id}`}\n                        type=\"checkbox\"\n                        className=\"custom-control-input\"\n                        checked={item.checked}\n                        onChange={() => console.log(\"check toggle\")}\n                    />\n                    <ItemLabel item={item}/>\n                </div>\n            </td>\n            <td>\n                <FaInfoCircle\n                    style={{cursor: \"pointer\"}}\n                    onClick={() => console.log(\"Info item\", item)}\n                />\n            </td>\n        </tr>\n    </Fragment>\n);\n\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport React from \"react\";\n\ninterface Props {\n    className?: string;\n}\n\nexport const LoadingSpinner = ({className}: Props) => (\n    <div className={className}>\n        <Loader\n            type=\"Bars\"\n            height={30}\n            color=\"#fff\"\n        />\n    </div>\n);\n","import React, {Component, Fragment} from \"react\";\nimport {Item} from \"../Item/Item\";\nimport {Table} from \"reactstrap\";\nimport ItemModel from \"../../../models/ItemModel\";\nimport GroupModel from \"../../../models/GroupModel\";\nimport {getItemsInGroup} from \"../../../api/items\";\nimport {LoadingSpinner} from \"../../LoadingSpinner/LoadingSpinner\";\nimport {useStoreState} from \"../../../store\";\n\ninterface Props {\n    group: GroupModel;\n}\n\nexport const GroupBody = ({group}: Props) => {\n\n    const items = useStoreState(state => state.items?.filter(item => (\n        item.groups.some(_group => _group.groupId === group.id)\n    )));\n\n    console.log(items);\n\n    return (\n        <Fragment>\n            {items !== undefined\n                ?\n                <Table className=\"mb-0 same-width\" striped>\n                    <tbody>\n                    {items.map((item: ItemModel) => (\n                        <Item item={item} key={item.id}/>\n                    ))}\n                    </tbody>\n                </Table>\n                :\n                <LoadingSpinner className=\"my-3\"/>\n            }\n        </Fragment>\n    );\n};","import React, {Fragment} from \"react\";\nimport GroupModel from \"../../../models/GroupModel\";\nimport {Card} from \"reactstrap\";\nimport GroupHeader from \"./GroupHeader\";\nimport {GroupBody} from \"./GroupBody\";\n\ninterface Props {\n    group: GroupModel;\n}\n\nexport const Group = ({group}: Props) => {\n\n    return (\n        <Fragment>\n            <Card className=\"space-between\">\n                <GroupHeader\n                    name={group.name!}\n                    notes={group.notes!}\n                />\n                <GroupBody group={group}/>\n            </Card>\n        </Fragment>\n    );\n};\n","import React, {Fragment, useEffect} from \"react\";\nimport {useStoreState, useStoreActions} from \"../../../store\";\nimport {Group} from \"./Group\";\n\nexport const Groups = () => {\n\n    const groups = useStoreState(state => state.groups);\n    const fetchGroups = useStoreActions(actions => actions.fetchGroups);\n    const fetchItems = useStoreActions(actions => actions.fetchItems);\n\n    useEffect( () => {\n        fetchGroups();\n        fetchItems();\n    }, [fetchGroups, fetchItems]);\n\n    console.log(\"Groups.tsx, groups:\", groups);\n\n    return (\n        <Fragment>\n            {groups.map(group => (\n                <Group key={group.id} group={group} />\n            ))}\n        </Fragment>\n    );\n};","import React from \"react\";\nimport Heading from \"../Heading/Heading\";\nimport {\n    Card,\n    Row,\n    Col,\n    CardBody,\n    CardHeader,\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from \"reactstrap\";\nimport {Groups} from \"./Group/Groups\";\n\nexport const ShoppingList = () => (\n    <div>\n        <Heading title=\"Shopping List\">\n            {renderDropdownMenu()}\n        </Heading>\n        <Row>\n            <Col sm={12} lg={8}>\n                {renderGroups()}\n            </Col>\n            <Col>\n                <Card className=\"space-between mt-3 mt-lg-0\">\n                    <CardHeader>New Item</CardHeader>\n                    <CardBody>Form</CardBody>\n                </Card>\n            </Col>\n        </Row>\n    </div>\n);\n\n\nfunction renderGroups() {\n    return (\n        <Groups/>\n    );\n}\n\nfunction renderDropdownMenu() {\n    // todo\n    return (\n        <ButtonDropdown isOpen={false} toggle={() => null}\n                        size=\"sm\" color=\"info\">\n            <DropdownToggle caret>\n                Actions\n            </DropdownToggle>\n            <DropdownMenu right>\n                <DropdownItem>Test</DropdownItem>\n                <DropdownItem>Test</DropdownItem>\n            </DropdownMenu>\n        </ButtonDropdown>\n    );\n}","import {Container, Row, Col} from \"reactstrap\";\nimport {ShoppingList} from \"./components/ShoppingList/ShoppingList\";\nimport React from \"react\";\nimport {StoreProvider} from \"easy-peasy\";\nimport {store} from \"./store\";\n\nconst App = () => {\n\n    return (\n        <StoreProvider store={store}>\n            <Container className={\"main-container pt-0\"}>\n                <Row>\n                    <Col>\n                        {/*{alerts.map(alert => (*/}\n                        {/*    <AlertPanel color={alert.color} text={alert.text} key={alert.text}/>*/}\n                        {/*))}*/}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <ShoppingList/>\n                    </Col>\n                </Row>\n            </Container>\n        </StoreProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./main.css\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}